services:
  nextapp:
    container_name: nextapp
    image: nextapp:1.0.0
    build:
      context: ./front
      dockerfile: next.dockerfile
    ports:
      - 3000:3000
    environment:
      NEXT_PUBLIC_BACK: ${NEXT_PUBLIC_BACK}

  flaskapp:
    container_name: flaskapp
    image: flaskapp:latest
    build:
      context: ./back
      dockerfile: flask.dockerfile
    ports:
      - 5000:5000
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JIMAKU_KEY: ${JIMAKU_KEY}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    depends_on:
      - db
      - redis

  db:
    container_name: db
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  celery:
        build: .
        command: celery -A core worker -l INFO
        volumes:
            - .:/usr/src/app
        environment:
            - DEBUG=1
            - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
            - CELERY_BROKER=redis://redis:6379/0
        depends_on:
            - flaskapp
            - redis 
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - 6379:6379
    

volumes:
  pgdata: {}
